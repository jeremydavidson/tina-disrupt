name: Build and Deploy to GitHub Pages (Yarn)

on:
  push:
    branches:
    - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js Environment
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      # - name: Setup Pages
      #   uses: actions/configure-pages@v5
      #   with:
      #     static_site_generator: next

      - name: Install Dependencies
        run: yarn --frozen-lockfile
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Build for Production
        env:
          NEXT_PUBLIC_TINA_BRANCH: ${{ github.ref_name }}
          NEXT_PUBLIC_TINA_CLIENT_ID: ${{ secrets.TINA_PUBLIC_CLIENT_ID }}
          TINA_TOKEN: ${{ secrets.TINA_TOKEN }}
        run: yarn build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

      # - name: Deploy to GitHub Pages
      #   uses: JamesIves/github-pages-deploy-action@v4
      #   with:
      #     branch: gh-pages 
      #     folder: out
      #     clean: true
      #     token: ${{ secrets.ACTIONS_REPO_TOKEN }}

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
